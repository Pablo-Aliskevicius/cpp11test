{"filter":false,"title":"cpp98style.h","tooltip":"/StringSwitch/cpp98style.h","undoManager":{"stack":[[{"start":{"row":0,"column":0},"end":{"row":37,"column":0},"action":"insert","lines":["// --------------------------------","// Fast string comparison.","// --------------------------------","// The speed is based on:","// 1. constexpr, that allows computing the hashes of the mapped elements at compile time.","// 2. The hash function itself is as simple as possible.","class StringKey","{","    // You cannot use std::string in a constexpr class, since it has a non-trivial destructor.","    const char * m_str;","\tconst int m_hash;","  // TODO: Make the hashing function and string compare function (strcmp, stricmp) policies (template parameters): if the string compare is CI, so should be the hash.","  // TODO: Make the char type (char or wchar_t) a template parameter","  // Using CONSTEXPR to trick the compiler into computing hashes, whenever possible, at compile time. ","    static constexpr int Hash(const char * s, int tot) ","    {","    \t// http://stackoverflow.com/questions/98153/whats-the-best-hashing-algorithm-to-use-on-a-stl-string-when-using-hash-map","    \t// Could also use http://isthe.com/chongo/tech/comp/fnv/ (public domain), but it looks like overkill. ","    \t// The recursion is the result of the constexpr requirement (no loops allowed, calling std::accumulate not allowed)","    \treturn *s ? Hash(s + 1, tot * 101 + s[0]) : tot; ","    }","    ","public:","\tconstexpr StringKey(const char *p): m_str(p), m_hash (Hash(p, 0))","\t{","\t}","","\tconstexpr bool operator < (const StringKey &that) const","\t{","\t\t// Collisions, while hopefully rare, are still possible.","\t\t// Two integer comparisons are cheaper than a strcmp() call.","\t\treturn ( (m_hash == that.m_hash) ? strcmp(m_str, that.m_str): m_hash - that.m_hash ) < 0;","\t}","\t// Debugging support: getters","\tint getHash() const {return m_hash;}","\tconst char * getName() const { return m_str; }","};",""],"id":1}],[{"start":{"row":37,"column":0},"end":{"row":38,"column":0},"action":"insert","lines":["",""],"id":2}],[{"start":{"row":38,"column":0},"end":{"row":38,"column":1},"action":"insert","lines":["s"],"id":3}],[{"start":{"row":38,"column":1},"end":{"row":38,"column":2},"action":"insert","lines":["t"],"id":4}],[{"start":{"row":38,"column":2},"end":{"row":38,"column":3},"action":"insert","lines":["u"],"id":5}],[{"start":{"row":38,"column":3},"end":{"row":38,"column":4},"action":"insert","lines":["r"],"id":6}],[{"start":{"row":38,"column":3},"end":{"row":38,"column":4},"action":"remove","lines":["r"],"id":7}],[{"start":{"row":38,"column":2},"end":{"row":38,"column":3},"action":"remove","lines":["u"],"id":8}],[{"start":{"row":38,"column":2},"end":{"row":38,"column":3},"action":"insert","lines":["r"],"id":9}],[{"start":{"row":38,"column":3},"end":{"row":38,"column":4},"action":"insert","lines":["u"],"id":10}],[{"start":{"row":38,"column":4},"end":{"row":38,"column":5},"action":"insert","lines":["c"],"id":11}],[{"start":{"row":38,"column":5},"end":{"row":38,"column":6},"action":"insert","lines":["t"],"id":12}],[{"start":{"row":38,"column":6},"end":{"row":38,"column":7},"action":"insert","lines":[" "],"id":13}],[{"start":{"row":38,"column":7},"end":{"row":38,"column":8},"action":"insert","lines":["T"],"id":14}],[{"start":{"row":38,"column":8},"end":{"row":38,"column":9},"action":"insert","lines":["e"],"id":15}],[{"start":{"row":38,"column":9},"end":{"row":38,"column":10},"action":"insert","lines":["s"],"id":16}],[{"start":{"row":38,"column":10},"end":{"row":38,"column":11},"action":"insert","lines":["t"],"id":17}],[{"start":{"row":38,"column":7},"end":{"row":38,"column":11},"action":"remove","lines":["Test"],"id":18},{"start":{"row":38,"column":7},"end":{"row":38,"column":12},"action":"insert","lines":["Tests"]}],[{"start":{"row":38,"column":11},"end":{"row":38,"column":12},"action":"remove","lines":["s"],"id":19}],[{"start":{"row":38,"column":11},"end":{"row":39,"column":0},"action":"insert","lines":["",""],"id":20}],[{"start":{"row":39,"column":0},"end":{"row":40,"column":0},"action":"insert","lines":["",""],"id":21}],[{"start":{"row":39,"column":0},"end":{"row":39,"column":1},"action":"insert","lines":["{"],"id":22}],[{"start":{"row":39,"column":1},"end":{"row":39,"column":2},"action":"insert","lines":["}"],"id":23}],[{"start":{"row":39,"column":2},"end":{"row":39,"column":3},"action":"insert","lines":[";"],"id":24}],[{"start":{"row":39,"column":1},"end":{"row":41,"column":0},"action":"insert","lines":["","    ",""],"id":25}],[{"start":{"row":40,"column":4},"end":{"row":41,"column":0},"action":"insert","lines":["",""],"id":26},{"start":{"row":41,"column":0},"end":{"row":41,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":40,"column":4},"end":{"row":62,"column":1},"action":"insert","lines":["","void testStringKey()","{","    StringKey sk1 (\"Alpha\");","    StringKey sk2 (\"Bravo\");","    StringKey sk3 (\"Charlie\");","    ","    cout << \"{ \" << setw(11) << right<< sk1.getHash() << \", \" << setw(7) << left << sk1.getName() << \"}\"","         << (sk1 < sk2 ? \"<\": sk2 < sk1 ? \">\" : \"eq\")","         << \"{ \" << setw(11) << right<< sk2.getHash() << \", \" << setw(7) << left << sk2.getName() << \"}\"","         << endl;","    ","    cout << \"{ \" << setw(11) << right<< sk1.getHash() << \", \" << setw(7) << left << sk1.getName() << \"}\"","         << (sk1 < sk3 ? \"<\": sk3 < sk1 ? \">\" : \"eq\")","         << \"{ \" << setw(11) << right<< sk3.getHash() << \", \" << setw(7) << left << sk3.getName() << \"}\"","         << endl;","         ","    cout << \"{ \" << setw(11) << right<< sk3.getHash() << \", \" << setw(7) << left << sk3.getName() << \"}\"","         << (sk3 < sk2 ? \"<\": sk2 < sk3 ? \">\" : \"eq\")","         << \"{ \" << setw(11) << right<< sk2.getHash() << \", \" << setw(7) << left << sk2.getName() << \"}\"","         << endl << endl;","    ","}"],"id":27}],[{"start":{"row":41,"column":0},"end":{"row":41,"column":1},"action":"insert","lines":["s"],"id":28}],[{"start":{"row":41,"column":1},"end":{"row":41,"column":2},"action":"insert","lines":["t"],"id":29},{"start":{"row":41,"column":2},"end":{"row":41,"column":3},"action":"insert","lines":["a"]}],[{"start":{"row":41,"column":3},"end":{"row":41,"column":4},"action":"insert","lines":["5"],"id":30},{"start":{"row":41,"column":4},"end":{"row":41,"column":5},"action":"insert","lines":["t"]},{"start":{"row":41,"column":5},"end":{"row":41,"column":6},"action":"insert","lines":["i"]}],[{"start":{"row":41,"column":6},"end":{"row":41,"column":7},"action":"insert","lines":["c"],"id":31}],[{"start":{"row":41,"column":7},"end":{"row":41,"column":8},"action":"insert","lines":[" "],"id":32}],[{"start":{"row":41,"column":3},"end":{"row":41,"column":4},"action":"remove","lines":["5"],"id":33}],[{"start":{"row":41,"column":0},"end":{"row":41,"column":4},"action":"insert","lines":["    "],"id":34},{"start":{"row":42,"column":0},"end":{"row":42,"column":4},"action":"insert","lines":["    "]},{"start":{"row":43,"column":0},"end":{"row":43,"column":4},"action":"insert","lines":["    "]},{"start":{"row":44,"column":0},"end":{"row":44,"column":4},"action":"insert","lines":["    "]},{"start":{"row":45,"column":0},"end":{"row":45,"column":4},"action":"insert","lines":["    "]},{"start":{"row":46,"column":0},"end":{"row":46,"column":4},"action":"insert","lines":["    "]},{"start":{"row":47,"column":0},"end":{"row":47,"column":4},"action":"insert","lines":["    "]},{"start":{"row":48,"column":0},"end":{"row":48,"column":4},"action":"insert","lines":["    "]},{"start":{"row":49,"column":0},"end":{"row":49,"column":4},"action":"insert","lines":["    "]},{"start":{"row":50,"column":0},"end":{"row":50,"column":4},"action":"insert","lines":["    "]},{"start":{"row":51,"column":0},"end":{"row":51,"column":4},"action":"insert","lines":["    "]},{"start":{"row":52,"column":0},"end":{"row":52,"column":4},"action":"insert","lines":["    "]},{"start":{"row":53,"column":0},"end":{"row":53,"column":4},"action":"insert","lines":["    "]},{"start":{"row":54,"column":0},"end":{"row":54,"column":4},"action":"insert","lines":["    "]},{"start":{"row":55,"column":0},"end":{"row":55,"column":4},"action":"insert","lines":["    "]},{"start":{"row":56,"column":0},"end":{"row":56,"column":4},"action":"insert","lines":["    "]},{"start":{"row":57,"column":0},"end":{"row":57,"column":4},"action":"insert","lines":["    "]},{"start":{"row":58,"column":0},"end":{"row":58,"column":4},"action":"insert","lines":["    "]},{"start":{"row":59,"column":0},"end":{"row":59,"column":4},"action":"insert","lines":["    "]},{"start":{"row":60,"column":0},"end":{"row":60,"column":4},"action":"insert","lines":["    "]},{"start":{"row":61,"column":0},"end":{"row":61,"column":4},"action":"insert","lines":["    "]},{"start":{"row":62,"column":0},"end":{"row":62,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":40,"column":0},"end":{"row":41,"column":0},"action":"remove","lines":["    ",""],"id":35}],[{"start":{"row":62,"column":0},"end":{"row":63,"column":0},"action":"remove","lines":["    ",""],"id":36}]],"mark":35,"position":35},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":38,"column":7},"end":{"row":38,"column":11},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1432452295000,"hash":"add2b6dcde6714a514bf3b0dcbc1bdec09f0e563"}